Elasticsearch
=============

from elasticsearch import Elasticsearch

# Connect to Elasticsearch
es = Elasticsearch("http://localhost:9200")

# Test the connection
if es.ping():
    print("Connected to Elasticsearch")
else:
    print("Failed to connect to Elasticsearch")


==============
TensorFlow 
==============
from elasticsearch import Elasticsearch
import tensorflow as tf
import numpy as np

# Connect to Elasticsearch
es = Elasticsearch("http://localhost:9200")

if es.ping():
    print("Connected to Elasticsearch")
else:
    print("Failed to connect to Elasticsearch")

# TensorFlow model
model = tf.keras.Sequential([
    tf.keras.layers.Dense(128, activation='relu', input_shape=(10,)),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dense(1)
])

model.compile(optimizer='adam', loss='mse')
X_train = np.random.rand(100, 10)
y_train = np.random.rand(100)
model.fit(X_train, y_train, epochs=5)

# Generate predictions
X_test = np.random.rand(10, 10)
predictions = model.predict(X_test)
data_for_es = [
    {"input": X_test[i].tolist(), "prediction": float(predictions[i][0])}
    for i in range(len(X_test))
]

# Create an index and insert data
index_name = "tensorflow_predictions"

if not es.indices.exists(index=index_name):
    es.indices.create(index=index_name)

for doc in data_for_es:
    es.index(index=index_name, document=doc)

print(f"Data indexed in '{index_name}'")

# Query data
response = es.search(index=index_name, query={"match_all": {}})
for hit in response['hits']['hits']:
    print(hit['_source'])


==============